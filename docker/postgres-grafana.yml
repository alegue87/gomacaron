# A Docker Compose application with Moqui, PostgreSQL, OpenSearch / Elasticsearch, OpenSearch Dashboards / Kibana, Grafana and virtual hosting through
# nginx-proxy supporting multiple moqui instances on different hostnames.

# Run with something like this for detached mode:
# $ docker compose -f moqui-postgres-compose.yml -p moqui up -d
# Or to copy runtime directories for mounted volumes, set default settings, etc use something like this:
# $ ./compose-up.sh moqui-postgres-compose.yml
# This sets the project/app name to 'moqui' and the network will be 'moqui_default', to be used by external moqui containers

# Test locally by adding the virtual host to /etc/hosts or with something like:
# $ curl -H "Host: moqui.local" localhost/Login

# To run an additional instance of moqui run something like this (but with
# many more arguments for volume mapping, db setup, etc):
# $ docker run -e VIRTUAL_HOST=moqui2.local --name moqui2_local --network moqui_default moqui

# To import data from the docker host using port 5432 mapped for 127.0.0.1 only use something like this:
# $ psql -h 127.0.0.1 -p 5432 -U moqui -W moqui < pg-dump.sql

# To reset password for Elasticsearch: bin/elasticsearch-reset-password -u elastic -i
# To setup password kibana_system: bin/elasticsearch-reset-password -u kibana_system -i

version: "3.9"
services:

  mac_grafana:
    image: grafana/grafana:10.2.0
    container_name: grafana_mac
    restart: always
    user: "0" # starts Grafana as root (setting needed for the UI customizations)
    ports:
      # change this as needed to bind to any address or even comment to not expose port outside containers
      - 3001:3000
    expose:
      - 5601:5601
    environment:
      - GF_SECURITY_ALLOW_EMBEDDING=true
      - GF_SECURITY_CSRF_TRUSTED_ORIGINS=localhost
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
      # - GF_AUTH_DISABLE_LOGIN_FORM=true
      # - GF_AUTH_OAUTH_AUTO_LOGIN=true
      # - GF_SERVER_PROTOCOL=http
      # - GF_SERVER_DOMAIN=moqui.local
      - GF_ENABLE_GZIP=true
      - GF_USERS_DEFAULT_THEME=light
      - GF_SERVER_ROOT_URL=%(protocol)s://%(domain)s:%(http_port)s/grafana
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
      - GF_LIVE_ALLOWED_ORIGINS=localhost
      - GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS=moqui-websocket-datasource,basic-panel,moqui-element-panel
    volumes:
      - ./grafana/data:/var/lib/grafana
      - ./grafana/run.sh:/run.sh # copied from https://github.com/grafana/grafana/blob/v10.2.1/packaging/docker/run.sh
      - ./grafana/public/:/tmp
      - ./grafana/datasources/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yaml
      # - ./grafana/dir:/usr/share/grafana/public:ro
    extra_hosts:
      - "host.docker.internal:host-gateway"

  mac-database:
    image: postgres:14
    container_name: mac-database
    user: 1000:1000
    restart: always
    # expose the port for use outside other containers, needed for external management (like Moqui Instance Management)
    ports:
      # change this as needed to bind to any address or even comment to not expose port outside containers
      - 5433:5432
    volumes:
      # edit these as needed to map configuration and data storage
      - ./db/postgres/data:/var/lib/postgresql/data
      # - ./postgresql/postgresql.conf:/etc/postgresql/postgresql.conf
    environment:
      - POSTGRES_DB=moqui
      - POSTGRES_DB_SCHEMA=public
      - POSTGRES_USER=moqui
      - POSTGRES_PASSWORD=moqui
      # PGDATA, POSTGRES_INITDB_ARGS
